<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VkREBERAREQEREBERAREQEREBERB/9k=
</value>
  </data>
  <data name="BtnAgregarClasificacion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAABYktHRH9Iv3HlAAAACXZwQWcAAAAQAAAAEABcxq3DAAAAJXRFWHRjcmVhdGUtZGF0ZQAyMDA4
        LTEwLTIzVDExOjU4OjM2KzA4OjAwqRNZ3gAAACV0RVh0bW9kaWZ5LWRhdGUAMjAwOC0xMC0yM1QxMTo1
        OTo1MCswODowMLzfeGkAAAHtSURBVDhPjZJNSFRRFMcPtJ+QoIKpCELmVUQguY3IFtmqaGczIX1AURup
        CMJFtNQWtUkzXGgw9IE2RWaNBBUVOklRM2U00XeUUNFGUFr8Oufe93jzphYe+N17OB//e897VwCRfU+Q
        3ATSNj4/rFZ7XK9bsiXm1Pk1T6zWRGwLBcpMq3P1PQwpI19g9GsSi1nu8lv4bE27xr3AiVNdHO3oYHVj
        wMWPkNciaSsh2UnddTTD+SWX65uC6h+tyYYCbmmvIOeh57UWvNHA4SqPf8DYN4/5FrNc93N4MVMvkKsw
        NQsnn0FXWQOd09yq6kivPOZbzHKd+u0mftYI2AjHdIR1mYAjT+G4FsjpOWUW6Q4xX2OWO/QI7umtJFc/
        wgXYr8m9D+DAQziofsR9bai3c3e/2xYK7K5w5xPsGIOdxX9xlTlJEFo8QtOagBYtbrkZc+NDWKbmmzwJ
        AbfYCP3QXIANwzGuInGqsGxoRSLmBXSE2/qPV16CxhrMosaI4FqaTHGV851ANELz2oBFeVg8GGMWCSwY
        aCA1mGJpPkX6ykKWDDfU3KC97EaQPqU3xky2atEmf9r2lxtpGkn7xi1KaySwZ5JRfcYFfecFfTQR7357
        EbPoJuuLy0PfWfgRt11HMmeUs//FVdpNNscne0P+AtiRwJM0q9pGAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BtnAgregarMedicion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAABYktHRH9Iv3HlAAAACXZwQWcAAAAQAAAAEABcxq3DAAAAJXRFWHRjcmVhdGUtZGF0ZQAyMDA4
        LTEwLTIzVDExOjU4OjM2KzA4OjAwqRNZ3gAAACV0RVh0bW9kaWZ5LWRhdGUAMjAwOC0xMC0yM1QxMTo1
        OTo1MCswODowMLzfeGkAAAHtSURBVDhPjZJNSFRRFMcPtJ+QoIKpCELmVUQguY3IFtmqaGczIX1AURup
        CMJFtNQWtUkzXGgw9IE2RWaNBBUVOklRM2U00XeUUNFGUFr8Oufe93jzphYe+N17OB//e897VwCRfU+Q
        3ATSNj4/rFZ7XK9bsiXm1Pk1T6zWRGwLBcpMq3P1PQwpI19g9GsSi1nu8lv4bE27xr3AiVNdHO3oYHVj
        wMWPkNciaSsh2UnddTTD+SWX65uC6h+tyYYCbmmvIOeh57UWvNHA4SqPf8DYN4/5FrNc93N4MVMvkKsw
        NQsnn0FXWQOd09yq6kivPOZbzHKd+u0mftYI2AjHdIR1mYAjT+G4FsjpOWUW6Q4xX2OWO/QI7umtJFc/
        wgXYr8m9D+DAQziofsR9bai3c3e/2xYK7K5w5xPsGIOdxX9xlTlJEFo8QtOagBYtbrkZc+NDWKbmmzwJ
        AbfYCP3QXIANwzGuInGqsGxoRSLmBXSE2/qPV16CxhrMosaI4FqaTHGV851ANELz2oBFeVg8GGMWCSwY
        aCA1mGJpPkX6ykKWDDfU3KC97EaQPqU3xky2atEmf9r2lxtpGkn7xi1KaySwZ5JRfcYFfecFfTQR7357
        EbPoJuuLy0PfWfgRt11HMmeUs//FVdpNNscne0P+AtiRwJM0q9pGAAAAAElFTkSuQmCC
</value>
  </data>
</root>